def content(makeFns):
	w,e,a,af,ae=makeFns('w,e,a,af,ae')
	abbrXls="<abbr title='Excel Binary File Format, бинарный формат файлов Excel'>xls</abbr>"
	abbrXlsx="<abbr title='Excel 2007 workbook'>xlsx</abbr>"
	abbrPdf="<abbr title='Portable Document Format'>pdf</abbr>"
	abbrCsv="<abbr title='comma-separated values, значения, разделённые запятыми'>csv</abbr>"
	abbrOdt="<abbr title='OpenDocument Text'>odt</abbr>"
	abbrSql="<abbr title='Structured Query Language, структурированный язык запросов'>sql</abbr>"
	def wp(x):
		w("<p>"+x+"</p>\n")
	def wli(x):
		w("<li>"+x+"</li>\n")
	def defCodeList(items,cls=None,end='\n'):
		x="<dl"
		if cls is not None:
			x+=" class='"+e(cls)+"'"
		x+=">"+end
		for dt,dd,*rest in items:
			x+="<dt"
			if rest:
				id,=rest
				x+=" id='"+e(id)+"'"
			x+="><code>"+dt+"</code></dt><dd>"+dd+"</dd>"+end
		x+="</dl>"+end
		return x
	def wDefCodeList(items,cls=None,end='\n'):
		w(defCodeList(items,cls,end))
	def downloadFileList(items,end='\n'):
		return defCodeList(((af('db/'+filename,filename),description) for filename,description in items),cls='downloads')
	def wDownloadFileList(items,end='\n'):
		w(downloadFileList(items,end))

	wp("Если вы не программист, то вам, скорее всего, нужен один из этих двух файлов:")
	wDownloadFileList((
		("departments.xlsx","Ведомственная структура расходов бюджета Санкт-Петербурга (по закону 2014 года)"),
		("sections.xlsx","Распределение бюджетных ассигнований бюджета Санкт-Петербурга (по закону 2014 года)"),
	))
	wp(
		"В каждом из этих файлов данные на 2014 год и на плановый период 2015 и 2016 годов, а также данные проектов, поправок и принятых законов объединены в одну таблицу со сворачивающимися уровнями."
	)
	wp("Также временно (до объединения данных для законов 2014 и 2015 годов) доступны аналогичные файлы для проекта закона о бюджете 2015 года:")
	wDownloadFileList((
		("departments2015.xlsx","Ведомственная структура расходов бюджета Санкт-Петербурга (по закону 2015 года без данных 2014 года)"),
		("sections2015.xlsx","Распределение бюджетных ассигнований бюджета Санкт-Петербурга (по закону 2015 года без данных 2014 года)"),
	))
	wp(
		"Далее приводится информация для тех, кто хочет получить подобные файлы самостоятельно или использовать данные, применявшиеся для их получения, иным способом."
	)

	w("<h1>База данных и таблицы расходов бюджета Санкт-Петербурга</h1>\n")
	wp(
		"Данные, использованные для построения базы, прошли несколько уровней обработки. "
		"Эти уровни пронумерованы так, что на каждом из них в качестве исходных данных используются только данные непосредственно предшествующего уровня. "
		"Список уровней:"
        )
	wDefCodeList((
		(a("#1-sources","1-sources"),"исходные данные — документы с различных сайтов</dd>"),
		(a("#2-tables","2-tables"),"таблицы, извлечённые из документов</dd>"),
		(a("#3-db","3-db"),"база данных, полученная из таблиц</dd>"),
		(a("#4-xls","4-xls"),"первый вариант отчётов из базы данных — "+abbrXls+"- и "+abbrXlsx+"-файлы</dd>"),
		(a("#4-xlsx","4-xlsx"),"второй, рекомендуемый вариант отчётов из базы данных — только "+abbrXlsx+"-файлы</dd>"),
	))
	wp(
		"Так как промежуточные данные тоже представляют интерес, здесь приводятся результаты каждого этапа. "
		"На данный момент собраны данные для 2014 года."
	)

	w("<h2 id='1-sources'>Исходные данные</h2>")
	wp("Исходными данными являются документы в том виде, в котором они были опубликованы на	официальных сайтах. Документы взяты из следующих источников:")
	w("<ul>\n")
	wli(
		"Раздел "+ae('http://www.fincom.spb.ru/comfin/budjet/budget_for_people.htm',"«Бюджет для граждан»")+" сайта "+ae("http://www.fincom.spb.ru/","Комитета финансов Санкт-Петербурга")+", "
		"откуда использованы "+abbrXlsx+"-файлы для таблиц расходов бюджета. "
		"Это позволяет установить, какими планировались расходы до рассмотрения в Законодательном Собрании, и какими они стали после. "
		"К сожалению, эти данные не полны."
	)
	wli(
		a('xls.html',"Проект по извлечению таблиц из "+abbrPdf+"-файлов")+", "
		"откуда берутся таблицы в формате "+abbrCsv+" для недостающих данных «Бюджета для граждан»."
	)
	wli(
		"Сайт "+ae('http://assembly.spb.ru/',"Законодательного Собрания Санкт-Петербурга")+", "
		"откуда берутся документы с поправками к бюджету. "
		"Это позволяет проследить, как менялись расходы бюджета при рассмотрении в <abbr title='Законодательном Собрании'>ЗС</abbr>. "
		"Полученные документы были вручную преобразованы в формат "+abbrOdt+". "
		"Короткие поправки в исходные данные не включены, они введены вручную и добавляются на следующем уровне."
	)
	w("</ul>\n")
	wDownloadFileList((
		("1-sources.out.zip","архив с документами"),
	))

	w("<h2 id='2-tables'>Таблицы из исходных документов</h2>")
	wp(
		"На этом уровне формируются "+abbrCsv+"-таблицы, из которых далее можно будет собрать базу данных. "
		"Первая строка каждого "+abbrCsv+"-файла содержит названия столбцов. "
		"Таблицы размещены в двух каталогах:"
	)
	wDefCodeList((
		("content","Собственно таблицы из документов. В основном это таблицы с изменениями ведомственной структуры расходов бюджета."),
		("meta","Таблицы с данными о самих документах."),
	))
	wp("Файлы каталога <code>content</code> содержат часть информации в своих именах (<code><em>filename</em></code>):")
	w("<pre>\n")
	w("<code><em>filename</em> ::= <em>stageYear</em> \".\" <em>documentNumber</em> \".\" <em>paragraphNumber</em> \".\" <em>tableType</em> \".\" <em>actionType</em> [ \"(\" <em>actionArguments</em> \")\" ] \".csv\"</code>\n")
	w("<code><em>stageYear</em> ::= <em>число</em></code>\n")
	w("<code><em>documentNumber</em> ::= <em>число</em></code>\n")
	w("<code><em>paragraphNumber</em> ::= <em>число</em> { \".\" <em>число</em> }</code>\n")
	w("<code><em>tableType</em> ::= <em>строка</em></code>\n")
	w("<code><em>actionType</em> ::= <em>строка</em></code>\n")
	w("<code><em>actionArguments</em> ::= <em>число</em> { \",\" <em>число</em> }</code>\n")
	w("</pre>\n")
	wp("Здесь <code><em>число</em></code> — последовательность из одной или более цифр, а <code><em>строка</em></code> — последовательность из одной или более строчных латинских букв.")
	wp("Описания элементов имён файлов:")
	wDefCodeList((
		("<em>stageYear</em>","основной год, для которого рассматривается бюджет; не является годом планового периода"),
		("<em>documentNumber</em>","номер документа в <abbr title='Законодательном Собрании'>ЗС</abbr>"),
		("<em>paragraphNumber</em>","номер приложения или пункта в документе"),
		("<em>tableType</em>","тип таблицы из документа, это может быть:"+
			defCodeList((
				("department","распределение расходов по комитетам и целевым статьям"),
				("section","распределение тех же расходов по разделам, приводится не для всех документов")
			),end='')
		),
		# таблицей сделать
		("<em>actionType</em>","тип операции, изменяющей данные расходов бюджета; соответствует виду поправки к бюджету:"+
			defCodeList((
				("set","сделать все значения для годов, указанных в аргументах, равными приведённым в таблице, отсутствующие в таблице значения убрать — в таком виде данные встречаются в первоначальной редакции бюджета"),
				("diff","прибавить значения, приведённые в таблице, к значениям, полученным в результате предыдущих операций — в таком виде данные встречаются в поправках к первоначальной редакции бюджета"),
					# годы
				("diffset","отменить все операции, сделанные в документах после указанного, и прибавить значения, приведённые в таблице — в таком виде данные встречаются в поправках к изменениям бюджета"),
					# номер документа, год
				("move","переместить данные, подходящие под указанный в таблице шаблон — такие операции соответствуют текстовым поправкам губернатора «Изменить подразделы, виды расходов и т. п.»"),
			),end=''),
		),
	))
	# в отличие от таблиц ...(про нормализацию)
	# ...
	# ...призвана объединить все данные из поправок к первой корректировке
	# но поскольку мы последовательно применяем все операции,
	# то к этому моменту мы уже применили упомянутые поправки
	# и теперь их надо отменить
	wp("Далее рассматриваются форматы отдельных файлов.")
	# content - предполагается чтение всех файлов в хронологическом порядке
	# content/*.department.move.csv
	wDefCodeList((
		(
			"meta/authors.csv",
			"Авторы, которые внесли в <abbr title='Законодательное Собрание'>ЗС</abbr> какой-либо документ или поправку. Столбцы:"+
			defCodeList((
				("authorId","числовой идентификатор автора для связи с "+a('#2-tables-meta-documents',"таблицей документов")),
				("authorShortName","короткое имя автора для написания в узких столбцах таблиц документов, получаемых на последнем уровне"),
				("authorLongName","имя автора в том виде, в котором оно указано на сайте <abbr title='Законодательного Собрания'>ЗС</abbr>"),
			),end=''),
			'2-tables-meta-authors'
		),
		(
			"meta/documents.csv",
			"Документы — проекты законов и поправки. Столбцы:"+
			defCodeList((
				("documentNumber","номер документа в <abbr title='Законодательном Собрании'>ЗС</abbr>"),
				("documentDate","дата внесения документа в расширенном формате ISO (YYYY-MM-DD)"),
				("stageNumber","номер варианта закона (0 — первоначальный закон, 1 — первая корректировка, 2 — вторая и т.д.) для связи с "+a('#2-tables-meta-stages',"таблицей вариантов законов")),
				("amendmentFlag","тип проекта/поправки (0 — проект, после которого идут 1 — отдельно внесённые поправки, затем 2 — прочие изменения, приводящие проект закона к конечному виду, в котором он принимается)"),
				("authorId","числовой идентификатор автора (если автор известен, для amendmentFlag=2 считается неизвестным)"),
				("documentAssemblyUrl","ссылка на документ на сайте <abbr title='Законодательного Собрания'>ЗС</abbr>, содержащий данные (если он там опубликован)"),
			),end=''),
			'2-tables-meta-documents'
		),
		(
			"meta/stages.csv",
			"Варианты законов. Столбцы:"+
                        defCodeList((
				("stageYear","первый год, на который распространяется закон"),
				("stageNumber","номер варианта закона для данного года"),
				("stageAssemblyUrl","ссылка на страницу с документами, поступившими в <abbr title='Законодательное Собрание'>ЗС</abbr> во время рассмотрения проекта этого варианта"),
			),end=''),
			'2-tables-meta-stages'
		),
	))
	wDownloadFileList((
		("2-tables.out.zip","архив с таблицами"),
	))

	w("<h2 id='3-db'>База данных</h2>\n")
	wp("Данные без избыточности и без различных типов операций — все изменения соответствуют операции <em>diff</em>.") # FIXME д.б. самодостаточно б отсыл к csv
	# чтобы получить значение для определённой редакции,
	# нужно сложить все amount для категории
	# с (кодом редакции) лексикографически <= нужного
	wDownloadFileList((
		("db.sql","база данных в формате "+abbrSql+" для <abbr title='системы управления базами данных'>СУБД</abbr> "+ae('http://www.sqlite.org/',"SQLite")),
	))

	w("<h2 id='4-xls'>Первый вариант отчётов</h2>\n")
	wp("Данные извлечены в "+abbrXls+" и "+abbrXlsx+"-таблицы для просмотра.")
	wDownloadFileList((
		("4-xls.out.zip","архив с таблицами"),
	))

	w("<h2 id='4-xlsx'>Второй вариант отчётов</h2>\n")
	wDownloadFileList((
		("departments.xlsx","Ведомственная структура расходов бюджета Санкт-Петербурга"),
		("sections.xlsx","Распределение бюджетных ассигнований бюджета Санкт-Петербурга"),
	))

	w("<h2>Предыдущие версии файлов</h2>\n")
	wDownloadFileList((
		("db.v1.zip","выпуск к принятию первоначального варианта закона о бюджете 2014 года"),
		("db.v2.zip","выпуск к принятию первой корректировки закона о бюджете 2014 года"),
	))
	wp(ae('https://www.dropbox.com/sh/zgnevck3cij1gm0/AABdfNdrzoimxiWDe_DDPfpCa/db','Ссылка на папку dropbox')+" (на случай, если они поменяют ссылки).")

	# TODO объяснить подробнее
	# w("<p>Названия целевых статей даны в виде, соответствующем закону о бюджете (некоторые из них изменились по сравнению с проектом закона).</p>\n")
